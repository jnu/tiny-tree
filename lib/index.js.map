{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAIA,iCAA4B;AAC5B,+BAA4B;AAApB,sBAAA,IAAI,CAAA;AAOZ,oBAA2B,OAAiB;IACxC,MAAM,IAAI,GAAG,IAAI,WAAI,EAAE,CAAC;IAExB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAErC,MAAM,CAAC,IAAI,CAAC;AAChB,CAAC;AAND,gCAMC;AAOD,0BAAiC,KAAe;IAC5C,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;AACtC,CAAC;AAFD,4CAEC","sourcesContent":["/**\n * @file Convenient functional tools for creating Tries from arrays\n */\n\nimport {Trie} from './Trie';\nexport {Trie} from './Trie';\n\n/**\n * Synchronously construct a new Trie out of the given strings.\n * @param  {String[]} words\n * @return {Trie}\n */\nexport function createSync(strings: string[]) {\n    const trie = new Trie();\n\n    strings.forEach(s => trie.insert(s));\n\n    return trie;\n}\n\n/**\n * Create a frozen Trie out of given words\n * @param  {String[]} words\n * @return {Trie}\n */\nexport function createFrozenSync(words: string[]) {\n    return createSync(words).freeze();\n}\n"]}